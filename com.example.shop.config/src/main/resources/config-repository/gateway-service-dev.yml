server:
  port: 19200

spring:
  cache:
    type: caffeine
  cloud:
    gateway:
      #      discovery:
      #        locator:
      #          enabled: true # 스프링 클라우드 2024 방식
      server:
        webflux:
          discovery:
            locator:
              enabled: true
          routes:
            - id: user-service
              uri: lb://user-service
              predicates:
                - Path=/v*/users/**, /v*/auth/**, /springdoc/openapi3-user-service.json

            - id: product-service
              uri: lb://product-service
              predicates:
                - Path=/v*/products/**, /springdoc/openapi3-product-service.json

            - id: order-service
              uri: lb://order-service
              predicates:
                - Path=/v*/orders/**, /springdoc/openapi3-order-service.json

            - id: payment-service
              uri: lb://payment-service
              predicates:
                - Path=/v*/payments/**, /springdoc/openapi3-payment-service.json

springdoc:
  swagger-ui:
    urls:
      - name: 0-user-service
        url: /springdoc/openapi3-user-service.json

      - name: 1-product-service
        url: /springdoc/openapi3-product-service.json

      - name: 2-order-service
        url: /springdoc/openapi3-order-service.json

      - name: 3-payment-service
        url: /springdoc/openapi3-payment-service.json

    #    use-root-path: true
    path: /docs

resilience4j:
  circuitbreaker:
    configs:
      default:  # 기본 구성 이름
        registerHealthIndicator: true  # 애플리케이션의 헬스 체크에 서킷 브레이커 상태를 추가하여 모니터링 가능
        # 서킷 브레이커가 동작할 때 사용할 슬라이딩 윈도우의 타입을 설정
        # COUNT_BASED: 마지막 N번의 호출 결과를 기반으로 상태를 결정
        # TIME_BASED: 마지막 N초 동안의 호출 결과를 기반으로 상태를 결정
        slidingWindowType: COUNT_BASED  # 슬라이딩 윈도우의 타입을 호출 수 기반(COUNT_BASED)으로 설정
        # 슬라이딩 윈도우의 크기를 설정
        # COUNT_BASED일 경우: 최근 N번의 호출을 저장
        # TIME_BASED일 경우: 최근 N초 동안의 호출을 저장
        slidingWindowSize: 20  # 슬라이딩 윈도우의 크기
        minimumNumberOfCalls: 20  # 서킷 브레이커가 동작하기 위해 필요한 최소한의 호출 수
        slowCallRateThreshold: 80  # 느린 호출의 비율이 이 임계값(80%)을 초과하면 서킷 브레이커가 동작
        slowCallDurationThreshold: 6000  # 느린 호출의 기준 시간(밀리초)
        failureRateThreshold: 50  # 실패율이 이 임계값(50%)을 초과하면 서킷 브레이커가 동작
        permittedNumberOfCallsInHalfOpenState: 3  # 서킷 브레이커가 Half-open 상태에서 허용하는 최대 호출 수
        # 서킷 브레이커가 Open 상태에서 Half-open 상태로 전환되기 전에 기다리는 시간
        waitDurationInOpenState: 20s  # Open 상태에서 Half-open 상태로 전환되기 전에 대기하는 시간
  timelimiter:
    configs:
      default:
        timeoutDuration: 5s
        cancelRunningFuture: true

shop:
  security:
    jwt:
      secret: sweetsalt # 실제 서비스에서는 env 등으로 관리
      access-expiration-millis: 1800000 # 1000 * 60 * 30 (30분)
      refresh-expiration-millis: 15552000000 # 1000 * 60 * 60 * 24 * 180 (180일)
      access-header-name: Authorization
      header-prefix: "Bearer "
      access-subject: accessJwt
      refresh-subject: refreshJwt